     1                                  ; Program start
     2                                  
     3                                  section .text
     4                                  
     5                                  extern printf
     6                                  extern scanf
     7                                  global main
     8                                  
     9                                  main:
    10 00000000 C8000000                        enter 0, 0
    11                                          ; func call: остров_в_океане
    12 00000004 E807000000                      call ___func_0
    13                                          ; func call end
    14                                  
    15 00000009 C9                              leave
    16 0000000A B800000000                      mov rax, 0
    17 0000000F C3                              ret
    18                                  
    19                                  ; =========================== Function definition =========================
    20                                  ; func name: остров_в_океане
    21                                  ___func_0:
    22 00000010 C8000000                        enter 0x0000, 0; this place is patched in the end of function definition
    23                                  
    24 00000014 4883EC08                        sub rsp, 8
    25 00000018 488D3C25[05000000]              lea rdi, [SCANF_DOUBLE_FMT]
    26 00000020 488D3424                        lea rsi, [rsp]
    27                                          ; scanf
    28 00000024 BA0F000000                      mov rdx, 0x0F
    29 00000029 4821E2                          and rdx, rsp
    30 0000002C 4885D2                          test rdx, rdx
    31 0000002F 740F                            je is_aligned_s_0
    32                                  
    33 00000031 4883EC08                        sub rsp, 8
    34 00000035 E8(00000000)                    call scanf
    35 0000003A 4883C408                        add rsp, 8
    36 0000003E EB05                            jmp is_aligned_s_end_0
    37                                  
    38                                  is_aligned_s_0:
    39 00000040 E8(00000000)                    call scanf
    40                                  is_aligned_s_end_0:
    41                                  
    42 00000045 8F4424E8                        pop qword [rsp - 8 - 16 - 0]
    43                                  
    44                                          ; func call: факториал
    45 00000049 E855000000                      call ___func_1
    46                                          ; func call end
    47                                  
    48 0000004E 4883EC08                        sub rsp, 8
    49 00000052 F20F110424                      movsd [rsp], xmm0
    50                                  
    51                                          ; printf
    52 00000057 488D3C25[00000000]              lea rdi, [PRINTF_DOUBLE_FMT]
    53 0000005F F20F100424                      movsd xmm0, [rsp]
    54 00000064 4883C408                        add rsp, 8
    55                                  
    56 00000068 BA0F000000                      mov rdx, 0x0F
    57 0000006D 4821E2                          and rdx, rsp
    58 00000070 4885D2                          test rdx, rdx
    59 00000073 740F                            je is_aligned_0
    60                                  
    61 00000075 4883EC08                        sub rsp, 8
    62 00000079 E8(00000000)                    call printf
    63 0000007E 4883C408                        add rsp, 8
    64 00000082 EB05                            jmp is_aligned_end_0
    65                                  
    66                                  is_aligned_0:
    67 00000084 E8(00000000)                    call printf
    68                                  is_aligned_end_0:
    69                                  
    70 00000089 4883EC08                        sub rsp, 8
    71 0000008D BA00000000                      mov rdx, 0x0
    72 00000092 48891424                        mov qword [rsp], rdx
    73 00000096 F20F100424                      movsd xmm0, [rsp]
    74 0000009B 4883C408                        add rsp, 8
    75 0000009F C9                              leave
    76 000000A0 C3                              ret
    77                                  
    78 000000A1 C9                              leave
    79 000000A2 C3                              ret
    80                                  ; ------------------------- Function definition end -----------------------
    81                                  
    82                                  
    83                                  ; =========================== Function definition =========================
    84                                  ; func name: факториал
    85                                  ___func_1:
    86 000000A3 C8080000                        enter 0x0008, 0; this place is patched in the end of function definition
    87                                  
    88 000000A7 FF75F8                          push qword [rbp - 8 - 0]
    89 000000AA 4883EC08                        sub rsp, 8
    90 000000AE 48BA000000000000F0-             mov rdx, 0x3ff0000000000000
    90 000000B7 3F                 
    91 000000B8 48891424                        mov qword [rsp], rdx
    92                                          ; operands comparison: op1 > op2
    93 000000BC F20F101424                      movsd xmm2, [rsp]
    94 000000C1 F20F104C2408                    movsd xmm1, [rsp + 8]
    95 000000C7 4883C408                        add rsp, 8
    96 000000CB F20F10D9                        movsd xmm3, xmm1
    97 000000CF F20F5CDA                        subsd xmm3, xmm2
    98 000000D3 F20F111C24                      movsd [rsp], xmm3
    99 000000D8 48BAFFFFFFFFFFFFFF-             mov rdx, -1 >> 1 ; 0x7FFFFFFFFFFFFFFF
    99 000000E1 7F                 
   100 000000E2 48211424                        and qword [rsp], rdx
   101 000000E6 F20F101C24                      movsd xmm3, [rsp]
   102 000000EB 4883EC08                        sub rsp, 8
   103 000000EF 48BA8DEDB5A0F7C6B0-             mov rdx, 0x3eb0c6f7a0b5ed8d
   103 000000F8 3E                 
   104 000000F9 48891424                        mov qword [rsp], rdx
   105 000000FD F20F102424                      movsd xmm4, [rsp]
   106 00000102 4883C408                        add rsp, 8
   107                                          ; xmm1 - op1; xmm2 - op2; xmm3 - fabs(op1 - op2); xmm4 - EPSILON
   108                                  
   109 00000106 660F2FDC                        comisd xmm3, xmm4 ; fabs(op1 - op2) {'<' | '>'} EPSILON
   110 0000010A 721A                            jc ___compare_1_false
   111                                  
   112 0000010C 660F2FCA                        comisd xmm1, xmm2 ; op1 {'<' | '>'} op2
   113 00000110 7214                            jc ___compare_1_false
   114                                  
   115 00000112 4883EC08                        sub rsp, 8
   116 00000116 48BA000000000000F0-             mov rdx, 0x3ff0000000000000
   116 0000011F 3F                 
   117 00000120 48891424                        mov qword [rsp], rdx
   118 00000124 EB0D                            jmp ___compare_1_end
   119                                  
   120                                  ___compare_1_false:
   121 00000126 4883EC08                        sub rsp, 8
   122 0000012A BA00000000                      mov rdx, 0x0
   123 0000012F 48891424                        mov qword [rsp], rdx
   124                                  ___compare_1_end:
   125                                  
   126                                          ; if begin
   127 00000133 4883EC08                        sub rsp, 8
   128 00000137 48BA8DEDB5A0F7C6B0-             mov rdx, 0x3eb0c6f7a0b5ed8d
   128 00000140 3E                 
   129 00000141 48891424                        mov qword [rsp], rdx
   130 00000145 48BAFFFFFFFFFFFFFF-             mov rdx, -1 >> 1 ; 0x7FFFFFFFFFFFFFFF
   130 0000014E 7F                 
   131 0000014F 4821542408                      and qword [rsp + 8], rdx
   132 00000154 F20F104C2408                    movsd xmm1, [rsp + 8]
   133 0000015A F20F101424                      movsd xmm2, [rsp]
   134 0000015F 4883C410                        add rsp, 16
   135 00000163 660F2FCA                        comisd xmm1, xmm2
   136 00000167 7265                            jc ___if_5_end
   137 00000169 FF75F8                          push qword [rbp - 8 - 0]
   138 0000016C 4883EC08                        sub rsp, 8
   139 00000170 48BA000000000000F0-             mov rdx, 0x3ff0000000000000
   139 00000179 3F                 
   140 0000017A 48891424                        mov qword [rsp], rdx
   141 0000017E F20F101424                      movsd xmm2, [rsp]
   142 00000183 F20F104C2408                    movsd xmm1, [rsp + 8]
   143 00000189 4883C408                        add rsp, 8
   144 0000018D F20F5CCA                        subsd xmm1, xmm2
   145 00000191 F20F110C24                      movsd [rsp], xmm1
   146                                  
   147 00000196 8F4424E8                        pop qword [rsp - 8 - 16 - 0]
   148                                  
   149                                          ; func call: факториал
   150 0000019A E804FFFFFF                      call ___func_1
   151                                          ; func call end
   152                                  
   153 0000019F 4883EC08                        sub rsp, 8
   154 000001A3 F20F110424                      movsd [rsp], xmm0
   155                                  
   156 000001A8 FF75F8                          push qword [rbp - 8 - 0]
   157 000001AB F20F101424                      movsd xmm2, [rsp]
   158 000001B0 F20F104C2408                    movsd xmm1, [rsp + 8]
   159 000001B6 4883C408                        add rsp, 8
   160 000001BA F20F59CA                        mulsd xmm1, xmm2
   161 000001BE F20F110C24                      movsd [rsp], xmm1
   162                                  
   163 000001C3 F20F100424                      movsd xmm0, [rsp]
   164 000001C8 4883C408                        add rsp, 8
   165 000001CC C9                              leave
   166 000001CD C3                              ret
   167                                  
   168                                  ___if_5_end:
   169                                          ; if end
   170                                  
   171 000001CE 4883EC08                        sub rsp, 8
   172 000001D2 48BA000000000000F0-             mov rdx, 0x3ff0000000000000
   172 000001DB 3F                 
   173 000001DC 48891424                        mov qword [rsp], rdx
   174 000001E0 F20F100424                      movsd xmm0, [rsp]
   175 000001E5 4883C408                        add rsp, 8
   176 000001E9 C9                              leave
   177 000001EA C3                              ret
   178                                  
   179 000001EB C9                              leave
   180 000001EC C3                              ret
   181                                  ; ------------------------- Function definition end -----------------------
   182                                  
   183                                  
   184                                  section .data
   185                                  
   186                                  GLOBAL_SECTION: times 0 dq 0
   187                                  
   188                                  section .rodata
   189                                  
   190 00000000 256C670A00              PRINTF_DOUBLE_FMT: db '%', 'l', 'g', 0x0a, 0
   191 00000005 256C6600                SCANF_DOUBLE_FMT:  db '%', 'l', 'f', 0
