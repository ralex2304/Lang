     1                                  ; Program start
     2                                  
     3                                  section .text
     4                                  
     5                                  extern printf
     6                                  extern scanf
     7                                  global main
     8                                  
     9                                  main:
    10 00000000 C8000000                        enter 0, 0
    11                                          ; func call: остров_в_океане
    12 00000004 E807000000                      call ___func_0
    13                                          ; func call end
    14                                  
    15 00000009 C9                              leave
    16 0000000A B800000000                      mov rax, 0
    17 0000000F C3                              ret
    18                                  
    19                                  ; =========================== Function definition =========================
    20                                  ; func name: остров_в_океане
    21                                  ___func_0:
    22 00000010 C8100000                        enter 0x0010, 0; this place is patched in the end of function definition
    23                                  
    24 00000014 4883EC08                        sub rsp, 8
    25 00000018 48BA00000000000014-             mov rdx, 0x4014000000000000
    25 00000021 40                 
    26 00000022 48891424                        mov qword [rsp], rdx
    27                                          ; var assignment: переменная
    28 00000026 8F45F8                          pop qword [rbp - 8 - 0]
    29                                  
    30                                          ; scope begin
    31 00000029 FF75F8                          push qword [rbp - 8 - 0]
    32                                          ; printf
    33 0000002C 488D3C25[00000000]              lea rdi, [PRINTF_DOUBLE_FMT]
    34 00000034 F20F100424                      movsd xmm0, [rsp]
    35 00000039 4883C408                        add rsp, 8
    36                                  
    37 0000003D BA0F000000                      mov rdx, 0x0F
    38 00000042 4821E2                          and rdx, rsp
    39 00000045 4885D2                          test rdx, rdx
    40 00000048 740F                            je is_aligned_0
    41                                  
    42 0000004A 4883EC08                        sub rsp, 8
    43 0000004E E8(00000000)                    call printf
    44 00000053 4883C408                        add rsp, 8
    45 00000057 EB05                            jmp is_aligned_end_0
    46                                  
    47                                  is_aligned_0:
    48 00000059 E8(00000000)                    call printf
    49                                  is_aligned_end_0:
    50                                  
    51 0000005E 4883EC08                        sub rsp, 8
    52 00000062 48BA00000000000024-             mov rdx, 0x4024000000000000
    52 0000006B 40                 
    53 0000006C 48891424                        mov qword [rsp], rdx
    54                                          ; var assignment: переменная
    55 00000070 8F45F0                          pop qword [rbp - 8 - 8]
    56                                  
    57 00000073 FF75F0                          push qword [rbp - 8 - 8]
    58                                          ; printf
    59 00000076 488D3C25[00000000]              lea rdi, [PRINTF_DOUBLE_FMT]
    60 0000007E F20F100424                      movsd xmm0, [rsp]
    61 00000083 4883C408                        add rsp, 8
    62                                  
    63 00000087 BA0F000000                      mov rdx, 0x0F
    64 0000008C 4821E2                          and rdx, rsp
    65 0000008F 4885D2                          test rdx, rdx
    66 00000092 740F                            je is_aligned_1
    67                                  
    68 00000094 4883EC08                        sub rsp, 8
    69 00000098 E8(00000000)                    call printf
    70 0000009D 4883C408                        add rsp, 8
    71 000000A1 EB05                            jmp is_aligned_end_1
    72                                  
    73                                  is_aligned_1:
    74 000000A3 E8(00000000)                    call printf
    75                                  is_aligned_end_1:
    76                                  
    77 000000A8 4883EC08                        sub rsp, 8
    78 000000AC 48BA00000000000024-             mov rdx, 0x4024000000000000
    78 000000B5 40                 
    79 000000B6 48891424                        mov qword [rsp], rdx
    80 000000BA FF75F0                          push qword [rbp - 8 - 8]
    81                                          ; swap last stk vals
    82 000000BD 5A                              pop rdx
    83 000000BE 4158                            pop r8
    84 000000C0 52                              push rdx
    85 000000C1 4150                            push r8
    86                                  
    87 000000C3 F20F101424                      movsd xmm2, [rsp]
    88 000000C8 F20F104C2408                    movsd xmm1, [rsp + 8]
    89 000000CE 4883C408                        add rsp, 8
    90 000000D2 F20F58CA                        addsd xmm1, xmm2
    91 000000D6 F20F110C24                      movsd [rsp], xmm1
    92                                  
    93                                          ; var assignment: переменная
    94 000000DB 8F45F0                          pop qword [rbp - 8 - 8]
    95                                  
    96 000000DE FF75F0                          push qword [rbp - 8 - 8]
    97                                          ; printf
    98 000000E1 488D3C25[00000000]              lea rdi, [PRINTF_DOUBLE_FMT]
    99 000000E9 F20F100424                      movsd xmm0, [rsp]
   100 000000EE 4883C408                        add rsp, 8
   101                                  
   102 000000F2 BA0F000000                      mov rdx, 0x0F
   103 000000F7 4821E2                          and rdx, rsp
   104 000000FA 4885D2                          test rdx, rdx
   105 000000FD 740F                            je is_aligned_2
   106                                  
   107 000000FF 4883EC08                        sub rsp, 8
   108 00000103 E8(00000000)                    call printf
   109 00000108 4883C408                        add rsp, 8
   110 0000010C EB05                            jmp is_aligned_end_2
   111                                  
   112                                  is_aligned_2:
   113 0000010E E8(00000000)                    call printf
   114                                  is_aligned_end_2:
   115                                  
   116                                          ; scope end
   117 00000113 FF75F8                          push qword [rbp - 8 - 0]
   118                                          ; printf
   119 00000116 488D3C25[00000000]              lea rdi, [PRINTF_DOUBLE_FMT]
   120 0000011E F20F100424                      movsd xmm0, [rsp]
   121 00000123 4883C408                        add rsp, 8
   122                                  
   123 00000127 BA0F000000                      mov rdx, 0x0F
   124 0000012C 4821E2                          and rdx, rsp
   125 0000012F 4885D2                          test rdx, rdx
   126 00000132 740F                            je is_aligned_3
   127                                  
   128 00000134 4883EC08                        sub rsp, 8
   129 00000138 E8(00000000)                    call printf
   130 0000013D 4883C408                        add rsp, 8
   131 00000141 EB05                            jmp is_aligned_end_3
   132                                  
   133                                  is_aligned_3:
   134 00000143 E8(00000000)                    call printf
   135                                  is_aligned_end_3:
   136                                  
   137 00000148 4883EC08                        sub rsp, 8
   138 0000014C BA00000000                      mov rdx, 0x0
   139 00000151 48891424                        mov qword [rsp], rdx
   140 00000155 F20F100424                      movsd xmm0, [rsp]
   141 0000015A 4883C408                        add rsp, 8
   142 0000015E C9                              leave
   143 0000015F C3                              ret
   144                                  
   145 00000160 C9                              leave
   146 00000161 C3                              ret
   147                                  ; ------------------------- Function definition end -----------------------
   148                                  
   149                                  
   150                                  section .data
   151                                  
   152                                  GLOBAL_SECTION: times 0 dq 0
   153                                  
   154                                  section .rodata
   155                                  
   156 00000000 256C670A00              PRINTF_DOUBLE_FMT: db '%', 'l', 'g', 0x0a, 0
   157 00000005 256C6600                SCANF_DOUBLE_FMT:  db '%', 'l', 'f', 0
