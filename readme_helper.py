import sys

if len(sys.argv) != 2:
    print("README file path must be passed to console arguments")
    exit(-1)

file = open(sys.argv[1])

lines = file.readlines()

file.close()
file = open(sys.argv[1], "w")

BEGIN_COMMENT = "[comment]: <> (Autogenerated contents section beginning)\n"
END_COMMENT   = "[comment]: <> (Autogenerated contents section ending)\n"

HEADER = "\n## Содержание\n\n"

BANNED_SYMBOLS = ["(", ")", ".", "`", ":", "+"]

text = HEADER
counters = [0]
level = 1

is_contents_section = 0

for line in lines:
    if not is_contents_section and line == BEGIN_COMMENT:
        is_contents_section += 1

    elif is_contents_section and line == END_COMMENT:
        is_contents_section += 1
        continue

    if not line.startswith("##") or is_contents_section % 2 != 0:
        continue

    cur_level = 1
    while (cur_level + 1) < len(line) and line[cur_level + 1] == "#":
        cur_level += 1

    while cur_level >= len(counters):
        counters.append(0)

    if cur_level < level:
        for i in range(cur_level + 1, len(counters)):
            counters[i] = 0

    level = cur_level

    header = line[cur_level + 2:-1]

    link = "#" + header.lower().replace(" ", "-")
    for i in BANNED_SYMBOLS:
        link = link.replace(i, "")

    text += "    " * (cur_level - 1) + str(counters[cur_level] + 1) + ". [" + header + "](" + link + ")\n"
    counters[cur_level] += 1

text += "\n"

if is_contents_section % 2 != 0:
    print("Error. Contents section is not closed")
    exit(-1)

is_contents_section = False

for line in lines:
    if line == END_COMMENT:
        is_contents_section = False

    if not is_contents_section:
        file.write(line)

    if line == BEGIN_COMMENT:
        is_contents_section = True

        file.write(text)

file.close()
